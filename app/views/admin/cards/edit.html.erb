<% if @card.errors.any? %>
  <div class="alert alert-danger">
    <ul>
      <% @card.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>

<h1>Edit RFID Card</h1>
<div class="card-body mb-3">
  <h5 class="card-title text-primary mb-3">
    <i class="bi bi-card-text"></i> Card Information
  </h5>

  <div class="mb-2">
    <div class="d-flex align-items-center">
      <i class="bi bi-credit-card text-info me-2"></i>
      <span class="fw-bold text-dark">Card ID:</span>
      <span class="ms-2 badge bg-light text-secondary">
        <%= @card.uid %>
      </span>
    </div>
  </div>

  <div>
    <div class="d-flex align-items-center">
      <i class="bi bi-person text-warning me-2"></i>
      <span class="fw-bold text-dark">Name:</span>
      <span class="ms-2 text-secondary">
        <%= if @card.user&.firstname.present?
              "#{@card.user.firstname} #{@card.user.middlename} #{@card.user.lastname}"
            else
              'NA'
            end %>
      </span>
    </div>
  </div>
</div>

<%= form_with(model: @card, method: :put, local: true) do |form| %>
  <%= form.hidden_field :uid, id: 'rfid-uid-input' %>

  <%= form.label :status %>
  <%= form.select :status, Card.statuses.keys.map { |status| [status.capitalize, status] },
                  { include_blank: "Select Status" },
                  { class: "form-select", required: true } %>

  <div class="mb-3">
    <%= form.label :uid_type, class: "form-label" %>
    <%= form.select :uid_type, Card.uid_types.keys.map { |type| [type.capitalize, type] },
                    { include_blank: "Select UID TYPE" },
                    { class: "form-select", required: true } %>
  </div>

  <%= form.submit 'Update Card' %>
<% end %>

<script>
    // JavaScript to enable/disable the user select field
    document.addEventListener('turbo:load', () => {
        const addUserCheckbox = document.getElementById('add-user-checkbox');
        const userSelect = document.getElementById('user-select');

        // Function to toggle the disabled state of the user select field
        const toggleUserSelect = () => {
            userSelect.disabled = !addUserCheckbox.checked;
        };

        if (addUserCheckbox) {
            // Add event listener to the checkbox
            addUserCheckbox.addEventListener('change', toggleUserSelect);

            // Initial toggle on page load
            toggleUserSelect();
        }
    });
</script>
