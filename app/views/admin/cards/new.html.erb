<h1>Register a New RFID Card</h1>

<p>Scanned RFID UID: <span id="rfid-uid-placeholder">Waiting for scan...</span></p>

<%= form_with(model: @card, method: :post, local: true) do |form| %>
  <%= form.hidden_field :uid, id: 'rfid-uid-input' %>

  <%= form.label :status %>
  <%= form.select :status, Card.statuses.keys.map { |status| [status.capitalize, status] },
                  { include_blank: "Select Status" },
                  { class: "form-select", required: true } %>

  <div class="mb-3">
    <%= form.label :user_id, "Professor", class: "form-label" %>
    <%= form.select :user_id,
                    User.active.order(:firstname).map { |user| ["#{[user.firstname, user.middlename, user.lastname].compact.join(' ')} (#{user.email})", user.id] },
                    { include_blank: "Select Professor" },
                    { class: "form-select", id: "user-select", required: true } %>
  </div>

  <div class="mb-3">
    <%= form.label :uid_type, class: "form-label" %>
    <%= form.select :uid_type, Card.uid_types.keys.map { |type| [type.capitalize, type] },
                    { include_blank: "Select UID TYPE" },
                    { class: "form-select", required: true } %>
  </div>

  <%= form.submit 'Register Card' %>
<% end %>

<script>
    document.addEventListener('turbo:load', () => {
        const rfidInput = document.getElementById('rfid-uid-input');
        const rfidPlaceholder = document.getElementById('rfid-uid-placeholder'); // Not used here

        App.rfid_scans = App.cable.subscriptions.create("RfidScanChannel", {
            connected() {
                console.log("Successfully connected to the WebSocket channel.");
            },
            disconnected() {
                console.log("Disconnected from the WebSocket channel.");
            },
            received(data) {
                console.log("Received data:", data);  // Log the received data

                if (data.action === "display_uid") {
                    console.log("Display UID action received:", data.uid);
                    // Set the hidden input field value to the scanned UID
                    rfidInput.value = data.uid;
                    rfidPlaceholder.textContent = data.uid;  // Optionally display UID in the placeholder
                } else {
                    // Handle the case where the card is already in use
                    rfidInput.value = "The card is already in use";  // Set the hidden field value to the error message
                }
            }
        });
    });
</script>