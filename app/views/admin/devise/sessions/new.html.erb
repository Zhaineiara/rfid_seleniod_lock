<%= stylesheet_link_tag "login.css", "data-turbo-track": "reload" %>

<nav class="navbar navbar-expand-lg navbar-dark px-3 w-100">
  <a class="navbar-brand d-flex align-items-center" href="#">
    <%= image_tag "TUP_Logo.png", alt: "TUP Logo", height: "30", class: "me-2" %>
    <span class="text-white">Technological University of the Philippines</span>
  </a>
</nav>

<div class="container d-flex flex-column align-items-center justify-content-center">
  <div class="login-card text-center">
    <%= image_tag "TUP_Logo.png", alt: "TUP Logo", height: "60", class: "mb-3 logo-pulse" %>
    <h5 class="fw-semibold mb-4">Technological University of the Philippines - <br>RFID Classroom Access Management</h5>

    <%= form_for(resource, as: resource_name, url: session_path(resource_name), html: { id: "loginForm" }) do |f| %>
      <div class="mb-3 text-start">
        <%= f.label :email, class: "form-label" %>
        <%= f.email_field :email, autofocus: true, autocomplete: "email", class: "form-control custom" %>
      </div>

      <div class="mb-3 text-start">
        <%= f.label :password, class: "form-label" %>
        <%= f.password_field :password, autocomplete: "current-password", class: "form-control custom" %>
      </div>

      <% if devise_mapping.rememberable? %>
        <div class="remember-me text-start">
          <%= f.check_box :remember_me, id: "remember-me" %>
          <%= f.label :remember_me, for: "remember-me" %>
        </div>
      <% end %>

      <div class="text-end">
        <%= f.submit "Login", class: "btn-login", id: "loginButton" %>
      </div>
    <% end %>

    <div id="messageContainer" style="display: none;">
      <p>Please wait a second...</p>
    </div>

  </div>
</div>

<script>
    document.addEventListener('turbo:load', function() {
        const inputs = document.querySelectorAll('input');

        inputs.forEach(input => {
            input.addEventListener('focus', function() {
                this.classList.add('input-animation');
            });

            input.addEventListener('blur', function() {
                this.classList.remove('input-animation');
            });
        });

        const emailInput = document.querySelector('input[type="email"]');
        const passwordInput = document.querySelector('input[type="password"]');
        const loginButton = document.getElementById('loginButton');
        const loginForm = document.getElementById('loginForm');
        const messageContainer = document.getElementById('messageContainer');
        const logo = document.querySelector('.logo-pulse');

        function toggleLoginButton() {
            if (emailInput.value.trim() !== '' && passwordInput.value.trim() !== '') {
                loginButton.disabled = false;
                loginButton.classList.remove('processing');
            } else {
                loginButton.disabled = true;
                loginButton.classList.add('processing');
            }
        }

        emailInput.addEventListener('input', toggleLoginButton);
        passwordInput.addEventListener('input', toggleLoginButton);
        toggleLoginButton();

        if (loginForm && loginButton) {
            loginForm.addEventListener('submit', function(e) {
                e.preventDefault();

                loginButton.value = 'Logging in...';
                loginButton.disabled = true;
                loginButton.classList.add('processing');

                setTimeout(() => {
                    loginButton.value = 'Success!';
                    loginButton.style.backgroundColor = '#28a745';

                    setTimeout(() => {
                        loginForm.style.transition = 'opacity 0.5s ease-out';
                        messageContainer.style.transition = 'opacity 0.5s ease-out';
                        loginForm.style.opacity = '0';
                        messageContainer.style.opacity = '0';

                        setTimeout(() => {
                            loginForm.style.display = 'none';
                            messageContainer.style.display = 'block';
                            messageContainer.style.opacity = '1';
                            logo.classList.add('spin-animation');
                            logo.style.display = 'block';

                            setTimeout(() => {
                                loginForm.submit();
                            }, 1500);
                        }, 500);
                    }, 1000);
                }, 2000);
            });
        }
    });

</script>