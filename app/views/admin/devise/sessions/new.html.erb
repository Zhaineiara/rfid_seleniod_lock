<%= stylesheet_link_tag "login.css", "data-turbo-track": "reload" %>

<nav class="navbar navbar-expand-lg navbar-dark px-3 w-100">
  <a class="navbar-brand d-flex align-items-center" href="#">
    <%= image_tag "eset_logo.png", alt: "EsET Logo", height: "30", class: "me-2" %>
    <span class="text-white">Electronics Engineering Technology Department</span>
  </a>
</nav>

<div class="container d-flex flex-column align-items-center justify-content-center login-container">
  <div class="login-card text-center">
    <%= image_tag "eset_logo.png", alt: "EsET Logo", height: "60", id: "cardLogo", class: "mb-3 logo-pulse" %>

    <h5 class="fw-semibold mb-1">Electronics Engineering Technology Department</h5>
    <p class="text-light mb-4" style="font-size: 13px; opacity: 0.85;">
      RFID-based Classroom Access Monitoring
    </p>

    <%= form_for(resource, as: resource_name, url: session_path(resource_name), html: { id: "loginForm" }) do |f| %>
      <div class="mb-3 text-start">
        <%= f.label :email, class: "form-label" %>
        <%= f.email_field :email, autofocus: true, autocomplete: "email", class: "form-control" %>
      </div>

      <div class="mb-3 text-start">
        <%= f.label :password, class: "form-label" %>
        <%= f.password_field :password, autocomplete: "current-password", class: "form-control" %>
      </div>

      <% if devise_mapping.rememberable? %>
        <div class="remember-me text-start">
          <%= f.check_box :remember_me, id: "remember-me" %>
          <%= f.label :remember_me, for: "remember-me" %>
        </div>
      <% end %>

      <div class="text-end">
        <%= f.submit "Login", class: "btn-login", id: "loginButton" %>
      </div>

<!--      <div class="forgot-password mt-3">-->
        <%#= link_to "Forgot your password?", new_password_path(resource_name), class: "text-light small fw-light", style: "opacity: 0.85; text-decoration: none;" %>
<!--      </div>-->
  <% end %>

    <div id="messageContainer" style="display: none;">
      <%= image_tag "eset_logo.png", alt: "EsET Logo", height: "60", id: "loadingLogo", class: "mb-3 logo-pulse", style: "display: none;" %>
      <p>Please wait a second...</p>
    </div>

  </div>
</div>

<div class="toast-container position-fixed bottom-0 end-0 p-3" style="z-index: 1055;">
  <div id="loginToast" class="toast align-items-center text-white bg-danger border-0"
       role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body" id="toastMessage">Invalid login credentials.</div>
      <button type="button" class="btn-close btn-close-white me-2 m-auto"
              data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
</div>

<%= javascript_include_tag "https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" %>

<script>
    document.addEventListener('turbo:load', () => {
        const loginForm        = document.getElementById('loginForm');
        const loginButton      = document.getElementById('loginButton');
        const emailInput       = document.querySelector('input[type="email"]');
        const passwordInput    = document.querySelector('input[type="password"]');
        const messageContainer = document.getElementById('messageContainer');
        const cardLogo         = document.getElementById('cardLogo');
        const loadingLogo      = document.getElementById('loadingLogo');
        const toastEl          = document.getElementById('loginToast');
        const toastMsg         = document.getElementById('toastMessage');
        const toast            = new bootstrap.Toast(toastEl);

        function toggleLoginButton() {
            if (emailInput.value.trim() && passwordInput.value.trim()) {
                loginButton.disabled = false;
                loginButton.classList.remove('processing');
            } else {
                loginButton.disabled = true;
                loginButton.classList.add('processing');
            }
        }

        emailInput.addEventListener('input', toggleLoginButton);
        passwordInput.addEventListener('input', toggleLoginButton);
        toggleLoginButton();

        loginForm.addEventListener('submit', (e) => {
            e.preventDefault();

            loginButton.value = 'Logging inâ€¦';
            loginButton.disabled = true;
            loginButton.classList.add('processing');

            fetch(loginForm.action, {
                method: 'POST',
                headers: {
                    'Accept': 'text/html',
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
                },
                body: new URLSearchParams(new FormData(loginForm)).toString()
            })
              .then(res => res.text())
              .then(html => {
                  const isFailure = html.includes("Invalid") || html.includes("alert-danger");

                  if (isFailure) {
                      loginButton.value = 'Login';
                      loginButton.disabled = false;
                      loginButton.classList.remove('processing');

                      const tmp = document.createElement('div');
                      tmp.innerHTML = html;
                      toastMsg.textContent = tmp.querySelector('.alert')?.textContent || 'Login failed.';
                      toast.show();
                  } else {
                      cardLogo.classList.add('fade-out');
                      loginForm.classList.add('fade-out');

                      setTimeout(() => {
                          cardLogo.style.display  = 'none';
                          loginForm.style.display = 'none';

                          messageContainer.style.display = 'block';
                          loadingLogo.style.display      = 'block';

                          requestAnimationFrame(() => {
                              messageContainer.classList.add('fade-in');
                              loadingLogo.classList.add('fade-in', 'spin-animation');
                          });

                          setTimeout(() => loginForm.submit(), 800);
                      }, 800);
                  }
              })
              .catch(err => {
                  console.error(err);
                  loginButton.value = 'Login';
                  loginButton.disabled = false;
                  loginButton.classList.remove('processing');
                  toastMsg.textContent = "Something went wrong. Try again.";
                  toast.show();
              });
        });
    });
</script>
